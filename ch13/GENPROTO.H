/*
** The proper usage and copyright information for
** this software is covered in DSCRLic.TXT
** This code is Copyright 1999 by Dann Corbit
*/


/*
** This is a set of automatically generated prototypes for sorting that
** use allsort.h
*/


    typedef struct tag_par {
        char            ascending;
        unsigned long   start;
        unsigned long   end;
    }               partition;

    extern double   pdeletemin_d(struct tag_par * p, char *end, double *data);
    extern double   pgetmin_d(struct tag_par p, double *data);
    extern int      cmp_d(double a, double b);
    extern int      cmp_f(float a, float b);
    extern int      cmp_ld(long double a, long double b);
    extern int      cmp_pd(double *a, double *b);
    extern int      cmp_pf(float *a, float *b);
    extern int      cmp_pld(long double *a, long double *b);
    extern int      cmp_psc(char *a, char *b);
    extern int      cmp_psi(int *a, int *b);
    extern int      cmp_psl(long *a, long *b);
    extern int      cmp_psll(sint64 * a, sint64 * b);
    extern int      cmp_puc(unsigned char *a, unsigned char *b);
    extern int      cmp_pui(unsigned int *a, unsigned int *b);
    extern int      cmp_pul(unsigned long *a, unsigned long *b);
    extern int      cmp_pull(uint64 * a, uint64 * b);
    extern int      cmp_sc(char a, char b);
    extern int      cmp_si(int a, int b);
    extern int      cmp_sl(long a, long b);
    extern int      cmp_sll(sint64 a, sint64 b);
    extern int      cmp_str(unsigned char *a, unsigned char *b);
    extern int      cmp_uc(unsigned char a, unsigned char b);
    extern int      cmp_ui(unsigned int a, unsigned int b);
    extern int      cmp_ul(unsigned long a, unsigned long b);
    extern int      cmp_ull(uint64 a, uint64 b);
    extern int      eq_d(double a, double b);
    extern int      eq_f(float a, float b);
    extern int      eq_ld(long double a, long double b);
    extern int      eq_pd(double *a, double *b);
    extern int      eq_pf(float *a, float *b);
    extern int      eq_pld(long double *a, long double *b);
    extern int      eq_psc(char *a, char *b);
    extern int      eq_psi(int *a, int *b);
    extern int      eq_psl(long *a, long *b);
    extern int      eq_psll(sint64 * a, sint64 * b);
    extern int      eq_puc(unsigned char *a, unsigned char *b);
    extern int      eq_pui(unsigned int *a, unsigned int *b);
    extern int      eq_pul(unsigned long *a, unsigned long *b);
    extern int      eq_pull(uint64 * a, uint64 * b);
    extern int      eq_sc(char a, char b);
    extern int      eq_si(int a, int b);
    extern int      eq_sl(long a, long b);
    extern int      eq_sll(sint64 a, sint64 b);
    extern int      eq_str(unsigned char *a, unsigned char *b);
    extern int      eq_uc(unsigned char a, unsigned char b);
    extern int      eq_ui(unsigned int a, unsigned int b);
    extern int      eq_ul(unsigned long a, unsigned long b);
    extern int      eq_ull(uint64 a, uint64 b);
    extern int      ge_d(double a, double b);
    extern int      ge_f(float a, float b);
    extern int      ge_ld(long double a, long double b);
    extern int      ge_pd(double *a, double *b);
    extern int      ge_pf(float *a, float *b);
    extern int      ge_pld(long double *a, long double *b);
    extern int      ge_psc(char *a, char *b);
    extern int      ge_psi(int *a, int *b);
    extern int      ge_psl(long *a, long *b);
    extern int      ge_psll(sint64 * a, sint64 * b);
    extern int      ge_puc(unsigned char *a, unsigned char *b);
    extern int      ge_pui(unsigned int *a, unsigned int *b);
    extern int      ge_pul(unsigned long *a, unsigned long *b);
    extern int      ge_pull(uint64 * a, uint64 * b);
    extern int      ge_sc(char a, char b);
    extern int      ge_si(int a, int b);
    extern int      ge_sl(long a, long b);
    extern int      ge_sll(sint64 a, sint64 b);
    extern int      ge_str(unsigned char *a, unsigned char *b);
    extern int      ge_uc(unsigned char a, unsigned char b);
    extern int      ge_ui(unsigned int a, unsigned int b);
    extern int      ge_ul(unsigned long a, unsigned long b);
    extern int      ge_ull(uint64 a, uint64 b);
    extern int      gt_d(double a, double b);
    extern int      gt_f(float a, float b);
    extern int      gt_ld(long double a, long double b);
    extern int      gt_pd(double *a, double *b);
    extern int      gt_pf(float *a, float *b);
    extern int      gt_pld(long double *a, long double *b);
    extern int      gt_psc(char *a, char *b);
    extern int      gt_psi(int *a, int *b);
    extern int      gt_psl(long *a, long *b);
    extern int      gt_psll(sint64 * a, sint64 * b);
    extern int      gt_puc(unsigned char *a, unsigned char *b);
    extern int      gt_pui(unsigned int *a, unsigned int *b);
    extern int      gt_pul(unsigned long *a, unsigned long *b);
    extern int      gt_pull(uint64 * a, uint64 * b);
    extern int      gt_sc(char a, char b);
    extern int      gt_si(int a, int b);
    extern int      gt_sl(long a, long b);
    extern int      gt_sll(sint64 a, sint64 b);
    extern int      gt_str(unsigned char *a, unsigned char *b);
    extern int      gt_uc(unsigned char a, unsigned char b);
    extern int      gt_ui(unsigned int a, unsigned int b);
    extern int      gt_ul(unsigned long a, unsigned long b);
    extern int      gt_ull(uint64 a, uint64 b);
    extern int      le_d(double a, double b);
    extern int      le_f(float a, float b);
    extern int      le_ld(long double a, long double b);
    extern int      le_pd(double *a, double *b);
    extern int      le_pf(float *a, float *b);
    extern int      le_pld(long double *a, long double *b);
    extern int      le_psc(char *a, char *b);
    extern int      le_psi(int *a, int *b);
    extern int      le_psl(long *a, long *b);
    extern int      le_psll(sint64 * a, sint64 * b);
    extern int      le_puc(unsigned char *a, unsigned char *b);
    extern int      le_pui(unsigned int *a, unsigned int *b);
    extern int      le_pul(unsigned long *a, unsigned long *b);
    extern int      le_pull(uint64 * a, uint64 * b);
    extern int      le_sc(char a, char b);
    extern int      le_si(int a, int b);
    extern int      le_sl(long a, long b);
    extern int      le_sll(sint64 a, sint64 b);
    extern int      le_str(unsigned char *a, unsigned char *b);
    extern int      le_uc(unsigned char a, unsigned char b);
    extern int      le_ui(unsigned int a, unsigned int b);
    extern int      le_ul(unsigned long a, unsigned long b);
    extern int      le_ull(uint64 a, uint64 b);
    extern int      lt_d(double a, double b);
    extern int      lt_f(float a, float b);
    extern int      lt_ld(long double a, long double b);
    extern int      lt_pd(double *a, double *b);
    extern int      lt_pf(float *a, float *b);
    extern int      lt_pld(long double *a, long double *b);
    extern int      lt_psc(char *a, char *b);
    extern int      lt_psi(int *a, int *b);
    extern int      lt_psl(long *a, long *b);
    extern int      lt_psll(sint64 * a, sint64 * b);
    extern int      lt_puc(unsigned char *a, unsigned char *b);
    extern int      lt_pui(unsigned int *a, unsigned int *b);
    extern int      lt_pul(unsigned long *a, unsigned long *b);
    extern int      lt_pull(uint64 * a, uint64 * b);
    extern int      lt_sc(char a, char b);
    extern int      lt_si(int a, int b);
    extern int      lt_sl(long a, long b);
    extern int      lt_sll(sint64 a, sint64 b);
    extern int      lt_str(unsigned char *a, unsigned char *b);
    extern int      lt_uc(unsigned char a, unsigned char b);
    extern int      lt_ui(unsigned int a, unsigned int b);
    extern int      lt_ul(unsigned long a, unsigned long b);
    extern int      lt_ull(uint64 a, uint64 b);
    extern int      parscan_d(double *array, unsigned long n, struct tag_par * ps, long max_par);
    extern int      parscan_si(int *array, unsigned long n, struct tag_par * ps, long max_par);
    extern int      parscan_str(unsigned char **array, unsigned long n, struct tag_par * ps, long max_par);
    extern int      pdeletemin_si(struct tag_par * p, char *end, int *data);
    extern int      pgetmin_si(struct tag_par p, int *data);
    extern long     InSort_d(double *A, unsigned long Hi);
    extern long     InSort_f(float *A, unsigned long Hi);
    extern long     InSort_ld(long double *A, unsigned long Hi);
    extern long     InSort_pd(double **A, unsigned long Hi);
    extern long     InSort_pf(float **A, unsigned long Hi);
    extern long     InSort_pld(long double **A, unsigned long Hi);
    extern long     InSort_psc(char **A, unsigned long Hi);
    extern long     InSort_psi(int **A, unsigned long Hi);
    extern long     InSort_psl(long **A, unsigned long Hi);
    extern long     InSort_psll(sint64 ** A, unsigned long Hi);
    extern long     InSort_puc(unsigned char **A, unsigned long Hi);
    extern long     InSort_pui(unsigned int **A, unsigned long Hi);
    extern long     InSort_pul(unsigned long **A, unsigned long Hi);
    extern long     InSort_pull(uint64 ** A, unsigned long Hi);
    extern long     InSort_sc(char *A, unsigned long Hi);
    extern long     InSort_si(int *A, unsigned long Hi);
    extern long     InSort_sl(long *A, unsigned long Hi);
    extern long     InSort_sll(sint64 * A, unsigned long Hi);
    extern long     InSort_str(unsigned char **A, unsigned long Hi);
    extern long     InSort_uc(unsigned char *A, unsigned long Hi);
    extern long     InSort_ui(unsigned int *A, unsigned long Hi);
    extern long     InSort_ul(unsigned long *A, unsigned long Hi);
    extern long     InSort_ull(uint64 * A, unsigned long Hi);
    extern long     ArrayIsReversed_d(double *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_f(float *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_ld(long double *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_pd(double **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_pf(float **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_pld(long double **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_psc(char **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_psi(int **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_psl(long **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_psll(sint64 ** A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_puc(unsigned char **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_pui(unsigned int **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_pul(unsigned long **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_pull(uint64 ** A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_sc(char *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_si(int *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_sl(long *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_sll(sint64 * A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_str(unsigned char **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_uc(unsigned char *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_ui(unsigned int *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_ul(unsigned long *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsReversed_ull(uint64 * A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_d(double *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_f(float *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_ld(long double *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_pd(double **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_pf(float **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_pld(long double **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_psc(char **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_psi(int **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_psl(long **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_psll(sint64 ** A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_puc(unsigned char **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_pui(unsigned int **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_pul(unsigned long **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_pull(uint64 ** A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_sc(char *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_si(int *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_sl(long *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_sll(sint64 * A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_str(unsigned char **A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_uc(unsigned char *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_ui(unsigned int *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_ul(unsigned long *A, unsigned long Lo, unsigned long Hi);
    extern long     ArrayIsSorted_ull(uint64 * A, unsigned long Lo, unsigned long Hi);
    extern unsigned char *pdeletemin_str(struct tag_par * p, char *end, unsigned char **data);
    extern unsigned char *pgetmin_str(struct tag_par p, unsigned char **data);
    extern void     Batcher_d(double *A, int N);
    extern void     Batcher_f(float *A, int N);
    extern void     Batcher_ld(long double *A, int N);
    extern void     Batcher_pd(double **A, int N);
    extern void     Batcher_pf(float **A, int N);
    extern void     Batcher_pld(long double **A, int N);
    extern void     Batcher_psc(char **A, int N);
    extern void     Batcher_psi(int **A, int N);
    extern void     Batcher_psl(long **A, int N);
    extern void     Batcher_psll(sint64 ** A, int N);
    extern void     Batcher_puc(unsigned char **A, int N);
    extern void     Batcher_pui(unsigned int **A, int N);
    extern void     Batcher_pul(unsigned long **A, int N);
    extern void     Batcher_pull(uint64 ** A, int N);
    extern void     Batcher_sc(char *A, int N);
    extern void     Batcher_si(int *A, int N);
    extern void     Batcher_sl(long *A, int N);
    extern void     Batcher_sll(sint64 * A, int N);
    extern void     Batcher_str(unsigned char **A, int N);
    extern void     Batcher_uc(unsigned char *A, int N);
    extern void     Batcher_ui(unsigned int *A, int N);
    extern void     Batcher_ul(unsigned long *A, int N);
    extern void     Batcher_ull(uint64 * A, int N);
    extern void     heapsort_d(double *A, int N);
    extern void     heapsort_si(int *A, int N);
    extern void     heapsort_str(unsigned char **A, int N);
    extern void     InsertFour_d(double *array);
    extern void     InsertFour_f(float *array);
    extern void     InsertFour_ld(long double *array);
    extern void     InsertFour_pd(double **array);
    extern void     InsertFour_pf(float **array);
    extern void     InsertFour_pld(long double **array);
    extern void     InsertFour_psc(char **array);
    extern void     InsertFour_psi(int **array);
    extern void     InsertFour_psl(long **array);
    extern void     InsertFour_psll(sint64 ** array);
    extern void     InsertFour_puc(unsigned char **array);
    extern void     InsertFour_pui(unsigned int **array);
    extern void     InsertFour_pul(unsigned long **array);
    extern void     InsertFour_pull(uint64 ** array);
    extern void     InsertFour_sc(char *array);
    extern void     InsertFour_si(int *array);
    extern void     InsertFour_sl(long *array);
    extern void     InsertFour_sll(sint64 * array);
    extern void     InsertFour_str(unsigned char **array);
    extern void     InsertFour_uc(unsigned char *array);
    extern void     InsertFour_ui(unsigned int *array);
    extern void     InsertFour_ul(unsigned long *array);
    extern void     InsertFour_ull(uint64 * array);
    extern void     InsertionSort_d(double *array, unsigned long count);
    extern void     InsertionSort_f(float *array, unsigned long count);
    extern void     InsertionSort_ld(long double *array, unsigned long count);
    extern void     InsertionSort_pd(double **array, unsigned long count);
    extern void     InsertionSort_pf(float **array, unsigned long count);
    extern void     InsertionSort_pld(long double **array, unsigned long count);
    extern void     InsertionSort_psc(char **array, unsigned long count);
    extern void     InsertionSort_psi(int **array, unsigned long count);
    extern void     InsertionSort_psl(long **array, unsigned long count);
    extern void     InsertionSort_psll(sint64 ** array, unsigned long count);
    extern void     InsertionSort_puc(unsigned char **array, unsigned long count);
    extern void     InsertionSort_pui(unsigned int **array, unsigned long count);
    extern void     InsertionSort_pul(unsigned long **array, unsigned long count);
    extern void     InsertionSort_pull(uint64 ** array, unsigned long count);
    extern void     InsertionSort_sc(char *array, unsigned long count);
    extern void     InsertionSort_si(int *array, unsigned long count);
    extern void     InsertionSort_sl(long *array, unsigned long count);
    extern void     InsertionSort_sll(sint64 * array, unsigned long count);
    extern void     InsertionSort_str(unsigned char **array, unsigned long count);
    extern void     InsertionSort_uc(unsigned char *array, unsigned long count);
    extern void     InsertionSort_ui(unsigned int *array, unsigned long count);
    extern void     InsertionSort_ul(unsigned long *array, unsigned long count);
    extern void     InsertionSort_ull(uint64 * array, unsigned long count);
    extern void     InsertOne_d(double *array);
    extern void     InsertOne_f(float *array);
    extern void     InsertOne_ld(long double *array);
    extern void     InsertOne_pd(double **array);
    extern void     InsertOne_pf(float **array);
    extern void     InsertOne_pld(long double **array);
    extern void     InsertOne_psc(char **array);
    extern void     InsertOne_psi(int **array);
    extern void     InsertOne_psl(long **array);
    extern void     InsertOne_psll(sint64 ** array);
    extern void     InsertOne_puc(unsigned char **array);
    extern void     InsertOne_pui(unsigned int **array);
    extern void     InsertOne_pul(unsigned long **array);
    extern void     InsertOne_pull(uint64 ** array);
    extern void     InsertOne_sc(char *array);
    extern void     InsertOne_si(int *array);
    extern void     InsertOne_sl(long *array);
    extern void     InsertOne_sll(sint64 * array);
    extern void     InsertOne_str(unsigned char **array);
    extern void     InsertOne_uc(unsigned char *array);
    extern void     InsertOne_ui(unsigned int *array);
    extern void     InsertOne_ul(unsigned long *array);
    extern void     InsertOne_ull(uint64 * array);
    extern void     InsertThree_d(double *array);
    extern void     InsertThree_f(float *array);
    extern void     InsertThree_ld(long double *array);
    extern void     InsertThree_pd(double **array);
    extern void     InsertThree_pf(float **array);
    extern void     InsertThree_pld(long double **array);
    extern void     InsertThree_psc(char **array);
    extern void     InsertThree_psi(int **array);
    extern void     InsertThree_psl(long **array);
    extern void     InsertThree_psll(sint64 ** array);
    extern void     InsertThree_puc(unsigned char **array);
    extern void     InsertThree_pui(unsigned int **array);
    extern void     InsertThree_pul(unsigned long **array);
    extern void     InsertThree_pull(uint64 ** array);
    extern void     InsertThree_sc(char *array);
    extern void     InsertThree_si(int *array);
    extern void     InsertThree_sl(long *array);
    extern void     InsertThree_sll(sint64 * array);
    extern void     InsertThree_str(unsigned char **array);
    extern void     InsertThree_uc(unsigned char *array);
    extern void     InsertThree_ui(unsigned int *array);
    extern void     InsertThree_ul(unsigned long *array);
    extern void     InsertThree_ull(uint64 * array);
    extern void     InsertTwo_d(double *array);
    extern void     InsertTwo_f(float *array);
    extern void     InsertTwo_ld(long double *array);
    extern void     InsertTwo_pd(double **array);
    extern void     InsertTwo_pf(float **array);
    extern void     InsertTwo_pld(long double **array);
    extern void     InsertTwo_psc(char **array);
    extern void     InsertTwo_psi(int **array);
    extern void     InsertTwo_psl(long **array);
    extern void     InsertTwo_psll(sint64 ** array);
    extern void     InsertTwo_puc(unsigned char **array);
    extern void     InsertTwo_pui(unsigned int **array);
    extern void     InsertTwo_pul(unsigned long **array);
    extern void     InsertTwo_pull(uint64 ** array);
    extern void     InsertTwo_sc(char *array);
    extern void     InsertTwo_si(int *array);
    extern void     InsertTwo_sl(long *array);
    extern void     InsertTwo_sll(sint64 * array);
    extern void     InsertTwo_str(unsigned char **array);
    extern void     InsertTwo_uc(unsigned char *array);
    extern void     InsertTwo_ui(unsigned int *array);
    extern void     InsertTwo_ul(unsigned long *array);
    extern void     InsertTwo_ull(uint64 * array);
    extern void     InsertZero_d(double *array);
    extern void     InsertZero_f(float *array);
    extern void     InsertZero_ld(long double *array);
    extern void     InsertZero_pd(double **array);
    extern void     InsertZero_pf(float **array);
    extern void     InsertZero_pld(long double **array);
    extern void     InsertZero_psc(char **array);
    extern void     InsertZero_psi(int **array);
    extern void     InsertZero_psl(long **array);
    extern void     InsertZero_psll(sint64 ** array);
    extern void     InsertZero_puc(unsigned char **array);
    extern void     InsertZero_pui(unsigned int **array);
    extern void     InsertZero_pul(unsigned long **array);
    extern void     InsertZero_pull(uint64 ** array);
    extern void     InsertZero_sc(char *array);
    extern void     InsertZero_si(int *array);
    extern void     InsertZero_sl(long *array);
    extern void     InsertZero_sll(sint64 * array);
    extern void     InsertZero_str(unsigned char **array);
    extern void     InsertZero_uc(unsigned char *array);
    extern void     InsertZero_ui(unsigned int *array);
    extern void     InsertZero_ul(unsigned long *array);
    extern void     InsertZero_ull(uint64 * array);
    extern void     Iqsort5_d(double *A, unsigned long n);
    extern void     Iqsort5_f(float *A, unsigned long n);
    extern void     Iqsort5_ld(long double *A, unsigned long n);
    extern void     Iqsort5_pd(double **A, unsigned long n);
    extern void     Iqsort5_pf(float **A, unsigned long n);
    extern void     Iqsort5_pld(long double **A, unsigned long n);
    extern void     Iqsort5_psc(char **A, unsigned long n);
    extern void     Iqsort5_psi(int **A, unsigned long n);
    extern void     Iqsort5_psl(long **A, unsigned long n);
    extern void     Iqsort5_psll(sint64 ** A, unsigned long n);
    extern void     Iqsort5_puc(unsigned char **A, unsigned long n);
    extern void     Iqsort5_pui(unsigned int **A, unsigned long n);
    extern void     Iqsort5_pul(unsigned long **A, unsigned long n);
    extern void     Iqsort5_pull(uint64 ** A, unsigned long n);
    extern void     Iqsort5_sc(char *A, unsigned long n);
    extern void     Iqsort5_si(int *A, unsigned long n);
    extern void     Iqsort5_sl(long *A, unsigned long n);
    extern void     Iqsort5_sll(sint64 * A, unsigned long n);
    extern void     Iqsort5_str(unsigned char **A, unsigned long n);
    extern void     Iqsort5_uc(unsigned char *A, unsigned long n);
    extern void     Iqsort5_ui(unsigned int *A, unsigned long n);
    extern void     Iqsort5_ul(unsigned long *A, unsigned long n);
    extern void     Iqsort5_ull(uint64 * A, unsigned long n);
    extern void     LinearInsertion_d(double *a, unsigned long n);
    extern void     LinearInsertion_si(int *a, unsigned long n);
    extern void     LinearInsertion_str(unsigned char **a, unsigned long n);
    extern void     Median_d(double *A, unsigned long n);
    extern void     Median_f(float *A, unsigned long n);
    extern void     Median_ld(long double *A, unsigned long n);
    extern void     Median_pd(double **A, unsigned long n);
    extern void     Median_pf(float **A, unsigned long n);
    extern void     Median_pld(long double **A, unsigned long n);
    extern void     Median_psc(char **A, unsigned long n);
    extern void     Median_psi(int **A, unsigned long n);
    extern void     Median_psl(long **A, unsigned long n);
    extern void     Median_psll(sint64 ** A, unsigned long n);
    extern void     Median_puc(unsigned char **A, unsigned long n);
    extern void     Median_pui(unsigned int **A, unsigned long n);
    extern void     Median_pul(unsigned long **A, unsigned long n);
    extern void     Median_pull(uint64 ** A, unsigned long n);
    extern void     Median_sc(char *A, unsigned long n);
    extern void     Median_si(int *A, unsigned long n);
    extern void     Median_sl(long *A, unsigned long n);
    extern void     Median_sll(sint64 * A, unsigned long n);
    extern void     Median_str(unsigned char **A, unsigned long n);
    extern void     Median_uc(unsigned char *A, unsigned long n);
    extern void     Median_ui(unsigned int *A, unsigned long n);
    extern void     Median_ul(unsigned long *A, unsigned long n);
    extern void     Median_ull(uint64 * A, unsigned long n);
    extern void     merge_sort_d(double *a, unsigned long count, struct tag_par * pset, unsigned long max_par);
    extern void     Merge_Sort_f(float *base, int nelem);
    extern void     Merge_Sort_ld(long double *base, int nelem);
    extern void     Merge_Sort_pd(double **base, int nelem);
    extern void     Merge_Sort_pf(float **base, int nelem);
    extern void     Merge_Sort_pld(long double **base, int nelem);
    extern void     Merge_Sort_psc(char **base, int nelem);
    extern void     Merge_Sort_psi(int **base, int nelem);
    extern void     Merge_Sort_psl(long **base, int nelem);
    extern void     Merge_Sort_psll(sint64 ** base, int nelem);
    extern void     Merge_Sort_puc(unsigned char **base, int nelem);
    extern void     Merge_Sort_pui(unsigned int **base, int nelem);
    extern void     Merge_Sort_pul(unsigned long **base, int nelem);
    extern void     Merge_Sort_pull(uint64 ** base, int nelem);
    extern void     Merge_Sort_sc(char *base, int nelem);
    extern void     merge_sort_si(int *a, unsigned long count, struct tag_par * pset, unsigned long max_par);
    extern void     Merge_Sort_sl(long *base, int nelem);
    extern void     Merge_Sort_sll(sint64 * base, int nelem);
    extern void     merge_sort_str(unsigned char **a, unsigned long count, struct tag_par * pset, unsigned long max_par);
    extern void     Merge_Sort_uc(unsigned char *base, int nelem);
    extern void     Merge_Sort_ui(unsigned int *base, int nelem);
    extern void     Merge_Sort_ul(unsigned long *base, int nelem);
    extern void     Merge_Sort_ull(uint64 * base, int nelem);
    extern void     percdown_d(double *A, int i, int N);
    extern void     percdown_si(int *A, int i, int N);
    extern void     percdown_str(unsigned char **A, int i, int N);
    extern void     pnormalize_d(struct tag_par * array, unsigned int count, double *data);
    extern void     pnormalize_si(struct tag_par * array, unsigned int count, int *data);
    extern void     pnormalize_str(struct tag_par * array, unsigned int count, unsigned char **data);
    extern void     pshellsort_d(struct tag_par * array, unsigned int count, double *data);
    extern void     pshellsort_si(struct tag_par * array, unsigned int count, int *data);
    extern void     pshellsort_str(struct tag_par * array, unsigned int count, unsigned char **data);
    extern void     qsort_d(double *A, int l, int r);
    extern void     qsort_si(int *A, int l, int r);
    extern void     qsort_str(unsigned char **A, int l, int r);
    extern void     RadixLsd_d(double *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_f(float *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_ld(long double *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_pd(double **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_pf(float **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_pld(long double **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_psc(char **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_psi(int **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_psl(long **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_psll(sint64 ** a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_puc(unsigned char **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_pui(unsigned int **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_pul(unsigned long **a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_pull(uint64 ** a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_sc(char *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_si(int *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_sl(long *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_sll(sint64 * a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_uc(unsigned char *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_ui(unsigned int *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_ul(unsigned long *a, long l, long r, unsigned int keysize);
    extern void     RadixLsd_ull(uint64 * a, long l, long r, unsigned int keysize);
    extern void     RadixMsd_d(double *a, long l, long r, unsigned int w);
    extern void     RadixMsd_f(float *a, long l, long r, unsigned int w);
    extern void     RadixMsd_ld(long double *a, long l, long r, unsigned int w);
    extern void     RadixMsd_pd(double **a, long l, long r, unsigned int w);
    extern void     RadixMsd_pf(float **a, long l, long r, unsigned int w);
    extern void     RadixMsd_pld(long double **a, long l, long r, unsigned int w);
    extern void     RadixMsd_psc(char **a, long l, long r, unsigned int w);
    extern void     RadixMsd_psi(int **a, long l, long r, unsigned int w);
    extern void     RadixMsd_psl(long **a, long l, long r, unsigned int w);
    extern void     RadixMsd_psll(sint64 ** a, long l, long r, unsigned int w);
    extern void     RadixMsd_puc(unsigned char **a, long l, long r, unsigned int w);
    extern void     RadixMsd_pui(unsigned int **a, long l, long r, unsigned int w);
    extern void     RadixMsd_pul(unsigned long **a, long l, long r, unsigned int w);
    extern void     RadixMsd_pull(uint64 ** a, long l, long r, unsigned int w);
    extern void     RadixMsd_sc(char *a, long l, long r, unsigned int w);
    extern void     RadixMsd_si(int *a, long l, long r, unsigned int w);
    extern void     RadixMsd_sl(long *a, long l, long r, unsigned int w);
    extern void     RadixMsd_sll(sint64 * a, long l, long r, unsigned int w);
    extern void     RadixMsd_uc(unsigned char *a, long l, long r, unsigned int w);
    extern void     RadixMsd_ui(unsigned int *a, long l, long r, unsigned int w);
    extern void     RadixMsd_ul(unsigned long *a, long l, long r, unsigned int w);
    extern void     RadixMsd_ull(uint64 * a, long l, long r, unsigned int w);
    extern void     ReverseArray_d(double *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_f(float *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_ld(long double *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_pd(double **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_pf(float **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_pld(long double **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_psc(char **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_psi(int **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_psl(long **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_psll(sint64 ** A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_puc(unsigned char **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_pui(unsigned int **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_pul(unsigned long **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_pull(uint64 ** A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_sc(char *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_si(int *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_sl(long *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_sll(sint64 * A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_str(unsigned char **A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_uc(unsigned char *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_ui(unsigned int *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_ul(unsigned long *A, unsigned long Lo, unsigned long Hi);
    extern void     ReverseArray_ull(uint64 * A, unsigned long Lo, unsigned long Hi);
    extern void     Shellsort_d(double *array, unsigned int count);
    extern void     Shellsort_f(float *array, unsigned int count);
    extern void     Shellsort_ld(long double *array, unsigned int count);
    extern void     Shellsort_pd(double **array, unsigned int count);
    extern void     Shellsort_pf(float **array, unsigned int count);
    extern void     Shellsort_pld(long double **array, unsigned int count);
    extern void     Shellsort_psc(char **array, unsigned int count);
    extern void     Shellsort_psi(int **array, unsigned int count);
    extern void     Shellsort_psl(long **array, unsigned int count);
    extern void     Shellsort_psll(sint64 ** array, unsigned int count);
    extern void     Shellsort_puc(unsigned char **array, unsigned int count);
    extern void     Shellsort_pui(unsigned int **array, unsigned int count);
    extern void     Shellsort_pul(unsigned long **array, unsigned int count);
    extern void     Shellsort_pull(uint64 ** array, unsigned int count);
    extern void     Shellsort_sc(char *array, unsigned int count);
    extern void     Shellsort_si(int *array, unsigned int count);
    extern void     Shellsort_sl(long *array, unsigned int count);
    extern void     Shellsort_sll(sint64 * array, unsigned int count);
    extern void     Shellsort_str(unsigned char **array, unsigned int count);
    extern void     Shellsort_uc(unsigned char *array, unsigned int count);
    extern void     Shellsort_ui(unsigned int *array, unsigned int count);
    extern void     Shellsort_ul(unsigned long *array, unsigned int count);
    extern void     Shellsort_ull(uint64 * array, unsigned int count);
    extern void     Swap_d(double *a, double *b);
    extern void     Swap_f(float *a, float *b);
    extern void     Swap_ld(long double *a, long double *b);
    extern void     Swap_pd(double *a, double *b);
    extern void     Swap_pf(float *a, float *b);
    extern void     Swap_pld(long double *a, long double *b);
    extern void     Swap_psc(char *a, char *b);
    extern void     Swap_psi(int *a, int *b);
    extern void     Swap_psl(long *a, long *b);
    extern void     Swap_psll(sint64 * a, sint64 * b);
    extern void     Swap_puc(unsigned char *a, unsigned char *b);
    extern void     Swap_pui(unsigned int *a, unsigned int *b);
    extern void     Swap_pul(unsigned long *a, unsigned long *b);
    extern void     Swap_pull(uint64 * a, uint64 * b);
    extern void     Swap_sc(char *a, char *b);
    extern void     Swap_si(int *a, int *b);
    extern void     Swap_sl(long *a, long *b);
    extern void     Swap_sll(sint64 * a, sint64 * b);
    extern void     Swap_str(unsigned char **a, unsigned char **b);
    extern void     Swap_uc(unsigned char *a, unsigned char *b);
    extern void     Swap_ui(unsigned int *a, unsigned int *b);
    extern void     Swap_ul(unsigned long *a, unsigned long *b);
    extern void     Swap_ull(uint64 * a, uint64 * b);

